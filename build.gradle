// Gradle 빌드 설정 파일

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
java {
    toolchain { languageVersion = JavaLanguageVersion.of(21) }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }  // Spring AI 문서 권장
    maven { url 'https://repo.spring.io/snapshot' }   // 스냅샷 필요시
}

ext {
    springAiVersion = '1.0.1'          // Spring AI 1.0.1 (안정판)
    langgraph4jVersion = '1.6.0-rc4'   // 최신 릴리스 후보 (Java17+)
    elasticJavaVersion = '7.17.15'      // 공식 문서 예시 버전
}

dependencies {
	// Spring Boot 웹 애플리케이션 개발에 필요한 기본 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.jsoup:jsoup:1.17.2'

    // Spring AI (Groq는 OpenAI 호환 엔드포인트로 구성)
    implementation platform("org.springframework.ai:spring-ai-bom:${springAiVersion}")
    implementation 'org.springframework.ai:spring-ai-starter-model-openai'  // Groq 연동에 사용

    // LangGraph4j (그래프 오케스트레이션)
    implementation "org.bsc.langgraph4j:langgraph4j-core:${langgraph4jVersion}"

    // Elasticsearch Java API Client
    implementation "co.elastic.clients:elasticsearch-java:${elasticJavaVersion}"
    implementation "org.elasticsearch.client:elasticsearch-rest-client:7.17.15"
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'          // ES 문서 예시와 동일

	// Lombok 라이브러리: Getter, Setter 등을 자동으로 생성 (개발 편의성)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 테스트 관련 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 환경변수 관련 의존성
    implementation 'io.github.cdimascio:java-dotenv:5.1.1'
}

tasks.named('compileJava') {
	options.compilerArgs.add('--enable-preview') // Java 21 프리뷰 기능 활성화 (컴파일 시)
}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs '--enable-preview' // 테스트 시에도 프리뷰 기능 활성화
}

tasks.named('bootRun') {
	jvmArgs '--enable-preview' // 애플리케이션 실행 시에도 프리뷰 기능 활성화
}
